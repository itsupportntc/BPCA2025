
@{
    ViewData["Title"] = "Add/Edit Unit";
}


<title>Add/Edit Unit</title>
<style>
    .columnLayout {
        column-count: 2;
        -webkit-column-count: 2;
        column-gap: 160px;
        -webkit-column-gap: 160px;
        display: block
    }

    .rowHeight {
        display: block;
        margin: 0px;
        padding: 0px;
        line-height: 1.2em;
        height: 1em;
    }

    td p {
        display: block;
        margin: 0px;
        padding: 0px;
        line-height: 1.2em;
        height: 1 .4em;
    }
    .labelInput {
        border: dashed;
        border-color: blue;
        width: unset;
    }

</style>
<script type="text/javascript">
    $(document).ready
        (function () {
            checkSession();

            loadBuildings();
        });

    function loadBuildings() {
        $.ajax(
            {
                type: 'GET',
                url: '/Home/GetBuildingList',
                cache: false,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: loadBuildingsSuccess,
                error: loadBuildingsError()
            });
    };

    function loadBuildingsSuccess(data) {
        $("#comboBuildings").igCombo({
            width: "270px",
            textKey: "Name",
            valueKey: "BuildingGuid",
            dataSource: data,
            dataSourceType: "json",
            filteringType: "local",
            autoComplete: true,
            placeHolder: "Select a building...",
            dropDownOrientation: "bottom"
        });
        $(function () {
            $("#unitCount").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $(function () {
            $("#commonInterestTotal").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $(function () {
            $("#commonCharges").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $("#comboBuildings").on("igcomboselectionchanged", function (evt, ui) {
            var bg = $("#comboBuildings").igCombo("value");
            loadBuildingSelection(bg, true);
        });
    };

    function loadBuildingSelection(bg, async) {
        $.ajax(
            {
                type: 'POST',
                async: true,
                url: '/Home/GetBuildingHeaderData',
                data: { buildingGuid: bg },
                dataType: "json",
                success: function (response) {
                    var jres = JSON.parse(response);
                    var uc = jres[0].unitCount;
                    var tci = jres[0].totalCommonInterest;
                    var cc = jres[0].Common_Charges;
                    var st = jres[0].SiteID;
                    var ad = jres[0].buildingAddress;
                    document.getElementById("siteID").value = st;
                    document.getElementById("address").value = ad;
                    $("#unitCount").igTextEditor("value", uc);
                    $("#commonInterestTotal").igTextEditor("value", tci);
                    $("#commonCharges").igTextEditor("value", parseCurrency(cc));
                    $.ajax(
                        {
                            type: 'POST',
                            async: true,
                            url: '/Home/GetAddEditUnit',
                            data: { buildingGuid: bg },
                            dataType: "json",
                            success: function (response) {
                                getUnitList(response);
                            },
                            error: loadBuildingsError()
                        });
                },
                error: loadBuildingsError()
            });
        //document.getElementById("buildingAddress").style.display = "block";
        document.getElementById("buildingData").style.display = "block";

    }

    function loadBuildingsError() {


    }

    function getUnitList(data) {
        $("#unitsList").igGrid({
            autoGenerateColumns: false,
            renderCheckboxes: true,
            primaryKey: "unitGuid",
            columns:
                [
                    { headerText: "unitguid", key: "unitGuid", dataType: "string", width: "0%" },
                    { headerText: "ownerGuid", key: "ownerGuid", dataType: "string", width: "0%" },
                    { headerText: "Unit Code", key: "UnitCode", dataType: "string", width: "10%" },
                    { headerText: "% Common Interest", key: "PctCi", dataType: "string", width: "20%", format: "percentage"},
                    { headerText: "Current Owner", key: "CurrentOwner", dataType: "string", width: "50%", height: 1 },
                    { headerText: "Months In Default", key: "MonthsInDefault", dataType: "string", width: "20%" }
                ],
            dataSource: data,
            autofitLastColumn: true,
            dataSourceType: "json",
            responseDataKey: "results",
            width: "100%",
            tabIndex: 1,
            features: [
                { name: "Paging", pageSize: 15 },
                {
                    name: "Filtering",
                    mode: "advanced"
                }, {
                    name: "Sorting"
                },
                {
                    name: "Updating",
                    locale: {
                        addRowLabel: "Add new unit...",
                        rowEditDialogCaptionLabel: "Add/Edit Unit"
                    },
                    enableAddRow: true,
                    enableUpdateRow: true,
                    enableDeleteRow: false,
                    startEditTriggers: "click",
                    editMode: "dialog",
                    rowEditDialogBeforeOpen: function (evt, ui) { 
                        ui.owner.grid.options.columns[4].hidden = true;
                        ui.owner.grid.options.columns[5].hidden = true;
                    },
                    rowEditDialogAfterClose: function (evt, ui) {
                        ui.owner.grid.options.columns[4].hidden = false;
                        ui.owner.grid.options.columns[5].hidden = false;
                    },
                    editRowEnding: function (evt, ui) {
                        if (!ui.update) {
                            return;
                        }

                        var bg = $("#comboBuildings").igCombo("value");
                        var uc = ui.values["UnitCode"];
                        var pct = ui.values["PctCi"];
                        var ug;
                        if (!ui.rowAdding) {
                            ug = ui.values["unitGuid"];
                        }
                        else {
                            ug = "00000000-0000-0000-0000-000000000000";
                        }
                        $.ajax(
                            { 
                                type: 'POST',
                                async: true,
                                url: '/Home/SaveUnit',
                                data: { unitGuid: ug, buildingGuid: bg, unitCode: uc, commonInterest: pct },
                                dataType: "json",
                                success: function (response) {
                                    alert("success");
                                },
                                error: loadBuildingsError()
                            });
                        loadBuildingSelection(bg, false);

                    },
                    columnSettings: [
                        {
                            columnKey: "unitGuid",
                            editorType: "text",
                            readOnly: true,
                            defaultValue: -1,
                            hidden: true
                        },
                        {
                            columnKey: "ownerGuid",
                            editorType: "text",
                            readOnly: true,
                            hidden: true
                        },
                        {
                            columnKey: "PctCi",
                            editorType: "percentage",
                            readOnly: false,
                            hidden: false,
                            required: true,
                            valdation: true,
                            editorOptions: {
                                validatorOptions:
                                {
                                    required: {
                                        errorMessage: "You must enter a common interest percent to continue."
                                    }
                                }
                            }
                        },
                        {
                            columnKey: "CurrentOwner",
                            editorType: "text",
                            readOnly: true,
                            hidden: true,
                            editorOptions: {
                                hidden: true
                            }
                        },
                        {
                            columnKey: "MonthsInDefault",
                            editorType: "text",
                            hidden: true,
                            editorOptions: {
                                hidden: true
                            }
                        },
                        {
                            columnKey: "UnitCode", 
                            editorType: "text",
                            maxLength: 25,
                            required: true,
                            valdation: true,
                            editorOptions: {
                                validatorOptions:
                                    {
                                        required: {
                                            errorMessage: "You must enter a unit code to continue."
                                        },
                                        onblur: true,
                                        custom:
                                            function (ui, evt) {
                                                var value = ui;
                                                var rows = $("#unitsList").igGrid("rows");
                                                for (var i = 0; i < rows.length; i++) {
                                                    var currentRow = rows[i];
                                                    var currentValue = $("#unitsList").igGrid("getCellValue", $(currentRow).attr("data-id"), "UnitCode");

                                                    if (value.toString().toLowerCase() == currentValue.toString().toLowerCase() && $(currentRow).find(".ui-iggrid-editingcell").length == 0) {
                                                        console.log('existing unit code');
                                                        document.getElementById("errorMessage").value = "The unit code specified already exists.";
                                                        return false;
                                                    }
                                                }
                                                document.getElementById("errorMessage").value = "";

                                                var siteId = document.getElementById("siteID").value;
                                                if (!value.toString().toLowerCase().match(siteId.toLowerCase())) {
                                                    document.getElementById("errorMessage").value = "You must specify the building Site ID in the unit code.";
                                                    console.log('wrong site id');
                                                    return false;
                                                }

                                                document.getElementById("errorMessage").value = "";
                                                return true;
                                            },
                                        errorMessage:
                                            function (arg) {
                                                return document.getElementById("errorMessage").value;
                                            }
                                        
                                    }
                            }
                                
                        }

                        
                    ],
                    rowEditDialogOptions: {
                        captionLabel: "Add new unit...",
                        width: 700,
                        height: 400,
                        dialogTemplateSelector: "#dialogTemplate",
                        editorsTemplateSelector: "#editorsTemplate",
                        containment: "ui",
                        animationDuration: 400

                    }
                },
                {
                    name: 'Hiding',
                    columnSettings:
                        [
                            {
                                columnKey: 'unitGuid',
                                allowHiding: false,
                                hidden: true
                            },
                            {
                                columnKey: 'ownerGuid',
                                allowHiding: false,
                                hidden: true
                            },
                            {
                                columnKey: 'UnitCode',
                                allowHiding: false,
                                hidden: false
                            },
                            {
                                columnKey: 'PctCi',
                                allowHiding: false,
                                hidden: false
                            },
                            {
                                columnKey: 'CurrentOwner',
                                allowHiding: false,
                                hidden: false
                            },
                            {
                                columnKey: 'MonthsInDefault',
                                allowHiding: false,
                                hidden: false
                            }
                        ]
                }]

        });
        
        //$("#unitsList").on("iggridupdatingroweditdialogafteropen", function (evt, ui) {
        //    console.log('iggridupdatingroweditdialogafteropen');
        //    console.log(ui.owner.grid.options.columns[4].name);
        //    ui.owner.grid.options.columns[4].hidden = false;
        //    ui.owner.grid.options.columns[5].hidden = false;
        //});
    }

    function parseCurrency(value) {
        var cc = 0;
        if (isNaN(value))
            cc = 0.00;
        else
            cc = parseFloat(value)
                .toFixed(2)
                .toString()
                .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return cc;
    }

</script>

<script id="dialogTemplate" type="text/html">
    <div style="float: left; width: 100%">
        <strong>${Name}</strong><br />
        <table style="width: 100%;">
            <colgroup>
                <col style="width: 30%;" />
                <col style="width: 200%;" />
            </colgroup>
            <tbody data-render-tmpl="true"></tbody>
        </table>
    </div>
</script>

<script id="editorsTemplate" type="text/html">
    <tr>
        <td style="color: black;">${headerText}</td>
        <td>
            <input data-editor-for-${key}="true" style="color: black; width: 1000px;" />
        </td>
    </tr>
</script>

<input type="hidden" id="errorMessage" value="This field is required." />

<div class="table" id="content" style="padding-top: 30px">
    <div class="row">
        <h4>Building:</h4>
        <div id="comboBuildings"></div>
    </div>
    <div class="row" id="buildingAddress" hidden="hidden">
            <table width="100%" >
                <tr class="tableRowPadding">
                    <td>
                        <input type="text" id="siteID" value="" readonly="readonly" class="labelInput"  />
                    </td>
                    </tr>
                <tr>
                    <td >
                        <input type="text" id="address" value="" readonly="readonly" class="labelInput" />
                    </td>
                </tr>
            </table>
    </div>
    <div class="row" id="buildingData" hidden="hidden">
        <table width="100%">
            <tr class="tableRowPadding">
                <th>Unit Count:</th>
                <th>Common Interest % Total:</th>
                <th>Common Charges:</th>
            </tr>
            <tr class="tableRowPadding">
                <td>
                    <input id="unitCount" style="color: black;">
                </td>
                <td>
                    <input id="commonInterestTotal" style="color: black;">
                </td>
                <td>
                    <input id="commonCharges" style="color: black;">
                </td>
            </tr>
            <tr class="tableRowPadding">
                <td colspan="3">
                    <table id="unitsList"></table>
                </td>
            </tr>


        </table>
        @*<div class="table" style="width: 100%;" >
                <div class="columnLayout">
                    <b>Unit Count:</b>
                    <b>Common Interest % Total:</b>
                </div>
                <div class="columnLayout" >
                    <input id="unitCount">
                    <input id="commonInterestTotal">
                </div>
            </div>*@
    </div>
</div>
