#pragma checksum "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\Home\BuildingListing.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "669370a78558a150bd8284e7f1732bcb240cbb5c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_BuildingListing), @"mvc.1.0.view", @"/Views/Home/BuildingListing.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/BuildingListing.cshtml", typeof(AspNetCore.Views_Home_BuildingListing))]
namespace AspNetCore
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\_ViewImports.cshtml"
using BPCACondoDeficiencies;

#line default
#line hidden
#line 2 "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\_ViewImports.cshtml"
using BPCACondoDeficiencies.Models;

#line default
#line hidden
#line 1 "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\Home\BuildingListing.cshtml"
using System.Web.Mvc;

#line default
#line hidden
#line 2 "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\Home\BuildingListing.cshtml"
using System;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"669370a78558a150bd8284e7f1732bcb240cbb5c", @"/Views/Home/BuildingListing.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7ea6a92b6c5cf497019ce7d1ea797cb70f00d02e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_BuildingListing : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(38, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 4 "C:\Users\USER\Downloads\BPCAGit2024-main\BPCAGit2024-main\BPCACondoDeficiencies\Views\Home\BuildingListing.cshtml"
  
    ViewData["Title"] = "Building Listing";

#line default
#line hidden
            BeginContext(88, 17874, true);
            WriteLiteral(@"

<script>
    var agencies;
    var pilotList =
        [
            { ""Pilot_Period"": 3 },
            { ""Pilot_Period"": 6 }
        ]
    $(document).ready

        (function () {
            checkSession();

            $.ajax({
                type: ""GET"",
                url: '/Home/GetAgencies',
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    agencies = data;
                    loadBuildings();
                },
                error: function () {
                }
            });
        });

    function loadBuildings() {
        $.ajax(
            {
                type: 'GET',
                url: '/Home/GetBuildingList',
                cache: false,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: getMessageSuccessCallBack,
                error: getMessageErrorCallBack()
            });
    };

    function");
            WriteLiteral(@" getMessageSuccessCallBack(data) {
        $(""#buildingGrid"").igGrid({
            autoGenerateColumns: false,
            renderCheckboxes: true,
            primaryKey: ""BuildingGuid"",
            caption: ""Buildings"",
            columns:
                [
                    { headerText: ""BuildingGuid"", key: ""BuildingGuid"", dataType: ""string"", width: ""0%"" },
                    { headerText: ""Building Name"", key: ""Name"", dataType: ""string"", width: ""13%"" },
                    { headerText: ""Address 1"", key: ""Address1"", dataType: ""string"", width: ""8%"" },
                    { headerText: ""Address 2"", key: ""Address2"", dataType: ""string"", width: ""7%"" },
                    { headerText: ""City"", key: ""City"", dataType: ""string"", width: ""6%"" },
                    { headerText: ""State"", key: ""State"", dataType: ""string"", width: ""4%"" },
                    { headerText: ""Zip Code"", key: ""ZipCode"", dataType: ""string"", width: ""6%"" },
                    { headerText: ""Agency"", key: ""AgencyGuid"", dataType: ""string""");
            WriteLiteral(@", width: ""0%"" },
                    { headerText: ""Site Id"", key: ""SiteID"", dataType: ""string"", width: ""5%"" },
                    { headerText: ""Pilot Period"", key: ""Pilot_Period"", dataType: ""string"", width: ""7%"" },
                    { headerText: ""Common Charges"", key: ""Common_Charges"", dataType: ""string"", width: ""11%"", format: ""currency"" },
                    { headerText: ""oldid"", key: ""oldid"", dataType: ""string"", width: ""0%"" },
                    { headerText: ""Retail"", key: ""Retail"", dataType: ""bool"", width: ""4%"", format: ""checkbox"" },
                    { headerText: ""Managed Since"", key: ""ManagedSince"", dataType: ""date"", width: ""9%"" },
                    { headerText: ""Agency Name"", key: ""AgencyName"", dataType: ""string"", width: ""10%""}
                ],
            dataSource: data,
            autofitLastColumn: false,
            dataSourceType: ""json"",
            responseDataKey: ""results"",
            width: ""100%"",
            tabIndex: 1,
            features: [
                {
      ");
            WriteLiteral(@"              name: ""Resizing"",
                    columnSettings: [
                        { columnKey: ""Name"", allowResizing: true },
                        { columnKey: ""Address1"", allowResizing: true },
                        { columnKey: ""Address2"", allowResizing: true },
                        { columnKey: ""City"", allowResizing: true },
                        { columnKey: ""State"", allowResizing: true },
                        { columnKey: ""ZipCode"", allowResizing: true },
                        { columnKey: ""SiteID"", allowResizing: true },
                        { columnKey: ""Pilot_Period"", allowResizing: true },
                        { columnKey: ""Common_Charges"", allowResizing: true },
                        { columnKey: ""Retail"", allowResizing: true },
                        { columnKey: ""ManagedSince"", allowResizing: true },
                        { columnKey: ""AgencyName"", allowResizing: true },
                    ]
                },
                {
                ");
            WriteLiteral(@"    name: ""Selection"",
                    mode: ""row"",
                    multipleSelection: false
                },
                {
                    name: ""Sorting""
                },
                {
                    name: ""Updating"",
                    locale: {
                        addRowLabel: ""Add new building..."",
                        rowEditDialogCaptionLabel: ""Add/Edit Building""
                    },
                    enableAddRow: true,
                    enableUpdateRow: true,
                    enableDeleteRow: false,
                    startEditTriggers: ""click"",
                    editMode: ""dialog"",
                    columnSettings: [
                        {
                            columnKey: ""BuildingGuid"",
                            visible: false,
                            readOnly: true,
                            required: true,
                            validation: true
                        },
                        {
                           ");
            WriteLiteral(@" columnKey: ""AgencyGuid"",
                            required: true,
                            editorType: ""combo"",
                            editorOptions: {
                                mode: ""dropdown"",
                                dataSource: jQuery.parseJSON(agencies),
                                textKey: ""AgencyName"",
                                valueKey: ""AgencyGuid"",
                                dropDownOnReadOnly: true
                            },
                            validation: true
                        },
                        {
                            columnKey: ""AgencyName"",
                            visible: false,
                            readOnly: true
                        },
                        {
                            columnKey: ""Pilot_Period"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            editorType: ""combo"",
            ");
            WriteLiteral(@"                editorOptions: {
                                mode: ""dropdown"",
                                dataSource: pilotList,
                                textKey: ""Pilot_Period"",
                                valueKey: ""Pilot_Period"",
                                dropDownOnReadOnly: true
                            }
                        },
                        {
                            columnKey: ""Name"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
                        {
                            columnKey: ""Address1"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
                        {
                            columnKey: ""City"",
                          ");
            WriteLiteral(@"  visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
                        {
                            columnKey: ""State"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
                        {
                            columnKey: ""ZipCode"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
                        {
                            columnKey: ""SiteID"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            validation: true
                        },
         ");
            WriteLiteral(@"               {
                            columnKey: ""Common_Charges"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            errorMessage: ""Value can't be the same as the name"",
                            validation: true,
                            editorType: ""currency""
                        },
                        {
                            columnKey: ""ManagedSince"",
                            visible: true,
                            readOnly: false,
                            required: true,
                            editorType: ""datepicker"",
                            validation: false,
                            editorOptions: {
                                dateDisplayFormat: ""date"",
                                dataMode: ""date""
                            }
                        }
                        
                    ],
                    rowEditDialogOptions: ");
            WriteLiteral(@"{
                        width: 700,
                        height: 700,
                        dialogTemplateSelector: ""#dialogTemplate"",
                        editorsTemplateSelector: ""#editorsTemplate"",
                        containment: ""ui"",
                        animationDuration: 400,
                        showReadonlyEditors: false
                    },
                    editRowEnding: function (evt, ui) {
                        console.log(ui);
                        var bg = ui.oldValues['BuildingGuid'];
                        if (bg == null) {
                            bg = '00000000-0000-0000-0000-000000000000';
                        }
                        var bn = ui.values['Name'];
                        var add1 = ui.values['Address1'];
                        var add2 = ui.values['Address2'];
                        var ct = ui.values['City'];
                        var st = ui.values['State'];
                        var zip = ui.values['ZipCode'];
                  ");
            WriteLiteral(@"      var pp = ui.values['Pilot_Period'];
                        var cc = ui.values['Common_Charges'];
                        var ag = ui.values['AgencyGuid'];
                        var si = ui.values['SiteID'];
                        var rt = ui.values['Retail'];
                        var ms = (ui.values.ManagedSince.getMonth() + 1) + ""/"" + ui.values.ManagedSince.getDate() + ""/"" + ui.values.ManagedSince.getFullYear();
                        if ((ui.update == true && ui.rowAdding == false) ||
                                (ui.update == true && ui.rowAdding == true)) {
                            $.ajax(
                                {
                                    async: true,
                                    type: 'POST',
                                    url: '/Home/SaveEditBuilding',
                                    cache: true,
                                    data: {
                                        buildingGuid: bg, name: bn, address1: add1, address2: add2, city: ct,
");
            WriteLiteral(@"                                        state: st, zipCode: zip, pilotPeriod: pp, commonCharges: cc, agencyGuid: ag, siteId: si,
                                        managedSince: ms, retail: rt
                                    },
                                    responseDataKey: ""response"",
                                    success: function (response) {
                                        loadBuildings();
                                    },
                                    error: function (jqXHR, exception) { 
                                        console.log(jqXHR);
                                        console.log(exception);
                                    }
                                });
                        }
                    },
                },
                {
                    name: 'Hiding',
                    columnSettings:
                        [
                            {
                                columnKey: ""BuildingGuid"",
              ");
            WriteLiteral(@"                  editorType: ""text"",
                                readOnly: true,
                                defaultValue: -1,
                                allowHiding: false,
                                hidden: true
                            },
                            {
                                columnKey: ""oldid"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: -1,
                                hidden: true,
                                allowHiding: false
                            },
                            {
                                columnKey: ""AgencyName"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: -1,
                                hidden: false,
                                allowHiding: false
                            }
                            ,
     ");
            WriteLiteral(@"                       {
                                columnKey: ""Name"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""Address1"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""Address2"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                       ");
            WriteLiteral(@"         allowHiding: false
                            },
                            {
                                columnKey: ""City"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""State"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""ZipCode"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
          ");
            WriteLiteral(@"                      hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""SiteID"",
                                editorType: ""text"",
                                readOnly: true,
                                defaultValue: '',
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""Common_Charges"",
                                editorType: ""number"",
                                readOnly: false,
                                defaultValue: 0,
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""Pilot_Period"",
                                editorType: ""number"",
                            ");
            WriteLiteral(@"    readOnly: false,
                                defaultValue: 0,
                                hidden: false,
                                allowHiding: false
                            },
                            {
                                columnKey: ""Retail"",
                                editorType: ""checkbox"",
                                readOnly: false,
                                defaultValue: 0,
                                hidden: false,
                                allowHiding: false
                            }
                        ]
                }
            ]

        });
    };

    function getMessageErrorCallBack() {
    };

</script>

<style type=""text/css"">
    #buildingGrid tr td {
        white-space: nowrap;
    }
</style>

<script id=""dialogTemplate"" type=""text/html"">
    <div style=""float: left; width: 100%"">
        <strong>${Name}</strong><br />
        <table style=""width: 100%;"">
            <colgroup>
                <col style=""width: 30%");
            WriteLiteral(@";"" />
                <col style=""width: 200%;"" />
            </colgroup>
            <tbody data-render-tmpl=""true""></tbody>
        </table>
    </div>
</script>

<script id=""editorsTemplate"" type=""text/html"">
    <tr>
        <td style=""color: black;"">${headerText}</td>
        <td><input data-editor-for-${key}=""true"" style=""color: black; width: 1000px;"" /></td>
    </tr>
</script>
<div style=""padding-top:40px;"">
    <table id=""buildingGrid""></table>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
