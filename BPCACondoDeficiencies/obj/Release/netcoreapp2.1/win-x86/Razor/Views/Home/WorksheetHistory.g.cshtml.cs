#pragma checksum "C:\Bpca\BPCA latest\Latest BPCA-02112023\Latest-rollback\BPCAGit\BPCACondoDeficiencies\Views\Home\WorksheetHistory.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5efd0491e960bb69f99034205c6893df207e0f1d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_WorksheetHistory), @"mvc.1.0.view", @"/Views/Home/WorksheetHistory.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/WorksheetHistory.cshtml", typeof(AspNetCore.Views_Home_WorksheetHistory))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Bpca\BPCA latest\Latest BPCA-02112023\Latest-rollback\BPCAGit\BPCACondoDeficiencies\Views\_ViewImports.cshtml"
using BPCACondoDeficiencies;

#line default
#line hidden
#line 2 "C:\Bpca\BPCA latest\Latest BPCA-02112023\Latest-rollback\BPCAGit\BPCACondoDeficiencies\Views\_ViewImports.cshtml"
using BPCACondoDeficiencies.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5efd0491e960bb69f99034205c6893df207e0f1d", @"/Views/Home/WorksheetHistory.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5b8fbd9faa897a3de153447734863bc8f11e1a8c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_WorksheetHistory : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Bpca\BPCA latest\Latest BPCA-02112023\Latest-rollback\BPCAGit\BPCACondoDeficiencies\Views\Home\WorksheetHistory.cshtml"
  
    ViewData["Title"] = "Worksheet History";

#line default
#line hidden
            BeginContext(55, 5501, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    $(document).ready
        (function () {
            checkSession();
            checkAdmin();
            loadBuildings();
        });

    function loadBuildings() {
        $.ajax(
            {
                type: 'GET',
                url: '/Home/GetBuildingList',
                cache: false,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: loadBuildingsSuccess,
                error: function () { }
            });
    };

    function loadBuildingsSuccess(data) {
        $(""#comboBuildings"").igCombo({
            width: ""270px"",
            textKey: ""Name"",
            valueKey: ""BuildingGuid"",
            dataSource: data,
            dataSourceType: ""json"",
            filteringType: ""local"",
            autoComplete: true,
            placeHolder: ""Select a building..."",
            dropDownOrientation: ""bottom""
        });
        $(function () {
    ");
            WriteLiteral(@"        $(""#unitCount"").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $(function () {
            $(""#commonInterestTotal"").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $(function () {
            $(""#commonCharges"").igTextEditor({
                width: 160,
                readOnly: true
            });
        });
        $(""#comboBuildings"").on(""igcomboselectionchanged"", function (evt, ui) {
            var bg = $(""#comboBuildings"").igCombo(""value"");
            loadBuildingSelection(bg);
        });
    };

    function loadBuildingSelection(bg) {
        $.ajax(
        {
            type: 'GET',
            async: true,
            url: '/Home/GetWorksheetHistory',
            data: { buildingGuid: bg },
            dataType: ""json"",
            success: function (response) {
                getWorksheetHistory(response);
            },
     ");
            WriteLiteral(@"           error: function () { }
        });
    }

    function getWorksheetHistory(data) {
        
        $(""#gridWorksheets"").igGrid({
            autoGenerateColumns: false,
            renderCheckboxes: true,
            primaryKey: ""WorksheetId"",
            columns:
                [
                    { headerText: ""Worksheet Id"", key: ""WorksheetId"", dataType: ""int"", width: ""15%"" },
                    { headerText: ""Submission Date"", key: ""SubmissionDate"", dataType: ""date"", width: ""20%"" },
                    { headerText: ""Approval Date"", key: ""ApprovalDate"", dataType: ""date"", width: ""20%"" },
                    { headerText: ""Approved By"", key: ""ApprovedBy"", dataType: ""string"", width: ""25%"" },
                    { headerText: ""BuildingGuid"", key: ""BuildingGuid"", dataType: ""string"", width: ""0%"" },
                    { headerText: ""invoiceGuid"", key: ""InvoiceGuid"", dataType: ""string"", width: ""0%"" },
                    { headerText: ""InvoiceDate"", key: ""InvoiceDate"", dataType:");
            WriteLiteral(@" ""string"", width: ""0%"" },
                    {
                        headerText: """", key: ""View"", dataType: ""string"", width: ""5%"",
                        template: ""<a onclick='viewWorksheet(\""${BuildingGuid}\"", \""${InvoiceDate}\"")' href='#'>View</a>""
                    },
                    {
                        headerText: """", key: ""Reject"", dataType: ""string"", width: ""10%"",
                        template: ""<a onclick='rejectWorksheet(${WorksheetId})'>Reject</a>""
                    },
                ],
            dataSource: data,
            autofitLastColumn: true,
            dataSourceType: ""json"",
            responseDataKey: ""results"",
            width: ""100%"",
            tabIndex: 1,
            features: [
                { name: ""Paging"", pageSize: 15 },
                {
                    name: ""Filtering"",
                    mode: ""advanced""
                }, {
                    name: ""Sorting""
                },
                {
                  ");
            WriteLiteral(@"  name: ""Updating"",
                    enableAddRow: false,
                    enableUpdateRow: false,
                    enableDeleteRow: false,
                }
            ],
        });
    }

    function viewWorksheet(buildingGuid, invoiceDate) {
        invoiceDate = new Date(invoiceDate);
        invoiceDate = invoiceDate.getMonth() + 1 + ""/1/"" + invoiceDate.getFullYear();
        var url = reportPath + 'rt=df&bg=' + buildingGuid + '&dt=' + invoiceDate;
        window.open(url, '_blank');
    }

    function rejectWorksheet(worksheetId) {
        $.ajax(
            {
                type: 'POST',
                async: true,
                url: '/Home/RejectWorksheet',
                data: { worksheetId: worksheetId },
                dataType: ""json"",
                success: function () {
                    var bg = $(""#comboBuildings"").igCombo(""value"");
                    loadBuildingSelection(bg);
                },
                error: function () { }
     ");
            WriteLiteral(@"       });
    }

</script>
<style type=""text/css"">
    #gridWorksheets tr td {
        white-space: nowrap;
    }
</style>
<div class=""table"" id=""content"" style=""padding-top: 30px"">
    <div class=""row"">
        <h4>Building:</h4>
        <div id=""comboBuildings""></div>
    </div>
    <div class=""row"">
        <div id=""gridWorksheets""></div>
    </div>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
